---
sudo: required

language: generic

env:
  #global:
    # https://github.com/travis-ci/travis-ci/issues/6461#issuecomment-239577307
    #DOCKER_VERSION: "1.9.1-0~trusty"
  matrix:
    - distribution: ubuntu
      version: 14.04
      init: /sbin/init
      run_opts: ""
      ansible_extra_vars: ''
    - distribution: ubuntu
      version: 16.04
      init: /bin/systemd
      run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
      ansible_extra_vars: ''
#   - distribution: centos
#     version: 6
#     init: /sbin/init
#     run_opts: ""
    - distribution: centos
      version: 7
      init: /usr/lib/systemd/systemd
      run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
      ansible_extra_vars: "'-e java_implementation=oracle'"

services:
  - docker

before_install:
  # Downgrade to specific version of Docker engine
  #- sudo apt-get update
  #- sudo apt-get remove docker-engine -yq
  #- sudo apt-get install docker-engine=$DOCKER_VERSION -yq --no-install-suggests --no-install-recommends --force-yes -o Dpkg::Options::="--force-confnew"

  # Build container
  - docker pull ${distribution}:${version}
  - docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests

script:
  - container_id=$(mktemp)

  # Run container in detached state
  - docker run --detach --volume="${PWD}":/etc/ansible/roles/ansible-java:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"

  # Display Ansible version
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible --version

  # Basic role syntax check
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-java/tests/test.yml --syntax-check

  # Run the role/playbook with ansible-playbook
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/ansible-java/tests/test.yml -vv ${ansible_extra_vars}

  # Run the role/playbook again, checking to make sure it's idempotent
  - >
    docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/ansible-java/tests/test.yml ${ansible_extra_vars}
    | tee /tmp/idempotency.log
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 1)

  # Playbook specific tests
  # ...

after_script:
  # Clean up
  - docker stop "$(cat ${container_id})"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
